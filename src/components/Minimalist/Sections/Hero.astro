---
import Section from "@/components/Minimalist/Section.astro";
//Obtendremos los datos del CV desde parametros enviados por el servidor
const { basics, t_languages } = Astro.props;
//console.log(basics);

const { name, label, image, location, profiles } = basics as Basics;
const { city, region, countryCode } = location;
const { languages } = Astro.props as { languages: Language[] };

import { ICONS } from "@/icons/icons.astro";
import type { Basics, Language, Profile } from "@/interfaces/CvData";
const { World } = ICONS;
---

<Section>
  <div class="container">
    <figure>
      <img src={image} alt={name} class="no-print" />
    </figure>
    <div class="info">
      <h1>{name}</h1>
      <h2>{label}</h2>
      
      <span>
        <p class="flex flex-row gap-x-2">
          <span class="font-semibold">{t_languages}:</span>
          {languages.map(({ language, fluency }, index) => (
            <span>
              {language} - {fluency} {index < languages.length - 1 && <span>|</span>}
            </span>
          ))}
        </p>
      </span>
      <span>
        {city}, {region}. {countryCode}
      </span>
      
      <footer>
        {
          profiles.map(({ network, url, username }) => {
            const Icon = ICONS[network];
            return (
            <div class="print">
              <p class="flex flex-row px-1 items-center gap-x-2">
                {Icon ? (
                  <Icon class="size-4"/>
                ) : (
                  <World class="size-4"/>
                )}
                {username}
              </p>
            </div>
              <div class="no-print">
                <a
                  href={url}  
                  title={`Ir a ${name} en ${network}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  style="font-size: 0.85rem"
                >
                  {Icon ? (
                    <Icon style="width: 20px; height: 20px; padding-right:0.2rem" />
                  ) : (
                    <World />
                  )}
                  {username}
                </a>
              </div>
            );
          })
        }
      </footer>
    </div>
  </div>
</Section>

<style>
  .container {
    display: -webkit-box;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
  }

  .info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding-right: 32px;
  }

  h1 {
    font-size: 2rem;
  }

  h2 {
    color: #444;
    font-size: 1.1rem;
    font-weight: 500;
    text-wrap: balance;
  }

  img {
    aspect-ratio: 1/1;
    object-fit: cover;
    min-width: 32px;
    width: 128px;
    border-radius: 100%;
  }

  footer {
    display: flex;
    flex-wrap: wrap;
    gap: 0.25rem;
    margin-top: 5px;
  }
  footer a {
    color: #777;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #eee;
    padding: 4px;
    width: auto;
    height: 32px;
    border-radius: 6px;
    transition: all 0.3s ease;
    box-shadow: inset 0 0 0 1px #eee;
  }

  footer a:hover {
    color: #333;
    background-color: #eee;
    border: 1px solid #ddd;
  }
  span {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.85rem;
    letter-spacing: -0.05rem;
  }

  @media only screen and (max-width: 500px) {
    /* For mobile phones: */
    figure {
      width: 100%;
    }
    .container {
      display: block;
    }
  }
</style>
