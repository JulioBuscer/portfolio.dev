---
import Section from "@/components/Minimalist/Section.astro";
//Obtendremos los datos del CV desde parametros enviados por el servidor
const { basics } = Astro.props;
//console.log(basics);

const { name, label, image, location, profiles, phone, email } = basics;
const { city, region, countryCode } = location;

import { ICONS } from "@/icons/icons.astro";
const { Github, LinkedIn, MailSend, PhoneCall, World } = ICONS;
---

<Section>
  <div class="container">
    <figure>
      <img src={image} alt={name} />
    </figure>
    <div class="info">
      <h1>{name}</h1>
      <h2>{label}</h2>
      <span>
        <World />
        {city}, {region}. {countryCode}
      </span>
      <footer>
        {
          email && (
            <a
              href={`mailto:${email}`}
              title={`Enviar un correo electrónico a ${name} al correo ${email}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <MailSend />
            </a>
          )
        }
        {
          phone && (
            <a
              href={`tel:${phone}`}
              title={`Llamar por teléfono a ${name} al numero ${phone}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <PhoneCall />
            </a>
          )
        }
        {
          profiles.map(
            ({
              network,
              url,
              username,
            }: {
              network: string;
              url: string;
              username: string;
            }) => {
              const Icon = ICONS[network];
              return (
                <a
                  href={url}
                  title={`Ir a ${name} en ${network}`}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  {Icon ? <Icon /> : <World />}
                </a>
              );
            }
          )
        }
      </footer>
    </div>
  </div>
</Section>

<style>
  .container {
    display: -webkit-box;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
  }

  .info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding-right: 32px;
  }

  h1 {
    font-size: 2rem;
  }

  h2 {
    color: #444;
    font-size: 1.1rem;
    font-weight: 500;
    text-wrap: balance;
  }

  img {
    aspect-ratio: 1/1;
    object-fit: cover;
    min-width: 32px;
    width: 128px;
    border-radius: 100%;
  }

  footer {
    display: flex;
    flex-direction: row;
    gap: 0.25rem;
    margin-top: 5px;
  }
  footer a {
    color: #777;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #eee;
    padding: 4px;
    width: 32px;
    height: 32px;
    border-radius: 6px;
    transition: all 0.3s ease;
    box-shadow: inset 0 0 0 1px #eee;
  }

  footer a:hover {
    color: #333;
    background-color: #eee;
    border: 1px solid #ddd;
  }
  span {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.85rem;
    letter-spacing: -0.05rem;
  }

  @media only screen and (max-width: 500px) {
    /* For mobile phones: */
    figure {
      width: 100%;
    }
    .container {
      display: block;
    }
  }
</style>
